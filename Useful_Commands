kubectl get pods                      # To get the list of pods
kubectl get nodes                     # To get the list of nodes
kubectl get pods -o wide              # To get detailed information about pods
kubectl get pods --show-labels        # Labels information
kubectl get pods -n <namespaces>      # To get pods in particular namespace
kubectl get pods --all-namespaces     # To get pod information in all namespaces
kubectl get all                       # To get all the objects
kubectl create -f <yaml-file-name>    # To create the kubernetes object
kubectl get pods -l app=my-app        # To get the pods details for particular labels
kubectl describe pods < pod name >    # To get all information related to pod
kubectl cluster-info
kubectl delete pods < pod name>


# Deployment commands
=======================

kubectl create -f deployment-definition.yml --record
kubectl rollout status deployment <deployment name>
kubectl rollout history deployment < deployment name>
kubectl rollout undo deployment < deployment name>

#Imparative commands
=======================

kubectl run nginx --image=nginx                                     # pod creation
kubectl create deployment my-deployment --image=nginx               # deployment creation "my-deployment"
kubectl create deployment my-deployment --image-nginx --replicas=5
kubectl expose deployment my-deployment --port 80                   # expose the deployment and create service
kubectl scale deployment my-deployment --replicas=5
kubectl edit deployment my-deployment
kubectl set image deployment my-deployment nginx=nginx:1.18

kubectl run nginx --image=nginx --dry-run=client -o yaml > pod.yml  # It will create the yaml file for pod
kubectl run redis --image-redis:alpine -l tier=db                   # create redis pod with labels tier=db

# To create a service and expose the pod on 6379 port
kubectl expose pod redis --name redis-service --port 6379 --target-port 6379

# Monitoring and Maintenance
==============================
kubectl logs < pod name >
kubectl logs -f < pod name >
kubectl logs -f < pod name > < container name >  # in case we have multiple container running in a pod.
kubectl top nodes   # Run git clone https://github.com/kodekloudhub/kubernetes-metrics-server.git and kubectl create -f .
kubectl top pod
kubectl get events
kubectl drain <node name>        # Evict or delete pod running on mentioned node
kubectl cordon < node name>      # Make the node unscheduled
Kubectl uncordon < node name >   # Make the node schedule

# Backup of objects and ETCD key-value store
=============================================
kubectl get all --all-namespaces -o yaml > backup-akk-object.yml
ETCDCTL_API=3 etcdctl snapshot save snapshot.db
ETCDCTL_API=3 etcdctl snapshot status snapshot.db


ETCDCTL_API=3 etcdctl --cacert="/etc/kubernetes/pki/etcd/ca.crt" \
 --cert="/etc/kubernetes/pki/etcd/server.crt" \
 --key="/etc/kubernetes/pki/etcd/server.key" \
 snapshot save /opt/snapshot-pre-boot.db

ETCDCTL_API=3 etcdctl snapshot restore /opt/snapshot-pre-boot.db --data-dir /var/lib/etcd-from-backup

# Change the data-dir in /etc/kubernetes/manifests/etcd.yml file





